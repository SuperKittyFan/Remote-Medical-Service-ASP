//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace 医院管理系统 {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsss : DataSet {
        
        private _TableDataTable table_Table;
        
        public dsss() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsss(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        
        public override DataSet Clone() {
            dsss cln = ((dsss)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Table"] != null)) {
                this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.table_Table = ((_TableDataTable)(this.Tables["Table"]));
            if ((this.table_Table != null)) {
                this.table_Table.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsss";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsss.xsd";
            this.Locale = new System.Globalization.CultureInfo("zh-CN");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.table_Table = new _TableDataTable();
            this.Tables.Add(this.table_Table);
        }
        
        private bool ShouldSerialize_Table() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnids;
            
            private DataColumn columnmyimname;
            
            private DataColumn columnmyimdata;
            
            private DataColumn columnmyimtype;
            
            private DataColumn column姓名;
            
            private DataColumn column性别;
            
            private DataColumn column出生年月;
            
            private DataColumn column籍贯;
            
            private DataColumn column种族;
            
            private DataColumn column政治面貌;
            
            private DataColumn column学历;
            
            private DataColumn column职务;
            
            private DataColumn column电话;
            
            private DataColumn column邮箱;
            
            private DataColumn column家庭地址;
            
            internal _TableDataTable() : 
                    base("Table") {
                this.InitClass();
            }
            
            internal _TableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn idsColumn {
                get {
                    return this.columnids;
                }
            }
            
            internal DataColumn myimnameColumn {
                get {
                    return this.columnmyimname;
                }
            }
            
            internal DataColumn myimdataColumn {
                get {
                    return this.columnmyimdata;
                }
            }
            
            internal DataColumn myimtypeColumn {
                get {
                    return this.columnmyimtype;
                }
            }
            
            internal DataColumn 姓名Column {
                get {
                    return this.column姓名;
                }
            }
            
            internal DataColumn 性别Column {
                get {
                    return this.column性别;
                }
            }
            
            internal DataColumn 出生年月Column {
                get {
                    return this.column出生年月;
                }
            }
            
            internal DataColumn 籍贯Column {
                get {
                    return this.column籍贯;
                }
            }
            
            internal DataColumn 种族Column {
                get {
                    return this.column种族;
                }
            }
            
            internal DataColumn 政治面貌Column {
                get {
                    return this.column政治面貌;
                }
            }
            
            internal DataColumn 学历Column {
                get {
                    return this.column学历;
                }
            }
            
            internal DataColumn 职务Column {
                get {
                    return this.column职务;
                }
            }
            
            internal DataColumn 电话Column {
                get {
                    return this.column电话;
                }
            }
            
            internal DataColumn 邮箱Column {
                get {
                    return this.column邮箱;
                }
            }
            
            internal DataColumn 家庭地址Column {
                get {
                    return this.column家庭地址;
                }
            }
            
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            
            public event _TableRowChangeEventHandler _TableRowChanged;
            
            public event _TableRowChangeEventHandler _TableRowChanging;
            
            public event _TableRowChangeEventHandler _TableRowDeleted;
            
            public event _TableRowChangeEventHandler _TableRowDeleting;
            
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            
            public _TableRow Add_TableRow(string myimname, System.Byte[] myimdata, string myimtype, string 姓名, string 性别, string 出生年月, string 籍贯, string 种族, string 政治面貌, string 学历, string 职务, string 电话, string 邮箱, string 家庭地址) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                row_TableRow.ItemArray = new object[] {
                        null,
                        myimname,
                        myimdata,
                        myimtype,
                        姓名,
                        性别,
                        出生年月,
                        籍贯,
                        种族,
                        政治面貌,
                        学历,
                        职务,
                        电话,
                        邮箱,
                        家庭地址};
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new _TableDataTable();
            }
            
            internal void InitVars() {
                this.columnids = this.Columns["ids"];
                this.columnmyimname = this.Columns["myimname"];
                this.columnmyimdata = this.Columns["myimdata"];
                this.columnmyimtype = this.Columns["myimtype"];
                this.column姓名 = this.Columns["姓名"];
                this.column性别 = this.Columns["性别"];
                this.column出生年月 = this.Columns["出生年月"];
                this.column籍贯 = this.Columns["籍贯"];
                this.column种族 = this.Columns["种族"];
                this.column政治面貌 = this.Columns["政治面貌"];
                this.column学历 = this.Columns["学历"];
                this.column职务 = this.Columns["职务"];
                this.column电话 = this.Columns["电话"];
                this.column邮箱 = this.Columns["邮箱"];
                this.column家庭地址 = this.Columns["家庭地址"];
            }
            
            private void InitClass() {
                this.columnids = new DataColumn("ids", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnids);
                this.columnmyimname = new DataColumn("myimname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmyimname);
                this.columnmyimdata = new DataColumn("myimdata", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmyimdata);
                this.columnmyimtype = new DataColumn("myimtype", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmyimtype);
                this.column姓名 = new DataColumn("姓名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column姓名);
                this.column性别 = new DataColumn("性别", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column性别);
                this.column出生年月 = new DataColumn("出生年月", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column出生年月);
                this.column籍贯 = new DataColumn("籍贯", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column籍贯);
                this.column种族 = new DataColumn("种族", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column种族);
                this.column政治面貌 = new DataColumn("政治面貌", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column政治面貌);
                this.column学历 = new DataColumn("学历", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column学历);
                this.column职务 = new DataColumn("职务", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column职务);
                this.column电话 = new DataColumn("电话", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column电话);
                this.column邮箱 = new DataColumn("邮箱", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column邮箱);
                this.column家庭地址 = new DataColumn("家庭地址", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column家庭地址);
                this.columnids.AutoIncrement = true;
                this.columnids.AllowDBNull = false;
                this.columnids.ReadOnly = true;
            }
            
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(_TableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRow : DataRow {
            
            private _TableDataTable table_Table;
            
            internal _TableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            
            public long ids {
                get {
                    return ((long)(this[this.table_Table.idsColumn]));
                }
                set {
                    this[this.table_Table.idsColumn] = value;
                }
            }
            
            public string myimname {
                get {
                    try {
                        return ((string)(this[this.table_Table.myimnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.myimnameColumn] = value;
                }
            }
            
            public System.Byte[] myimdata {
                get {
                    try {
                        return ((System.Byte[])(this[this.table_Table.myimdataColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.myimdataColumn] = value;
                }
            }
            
            public string myimtype {
                get {
                    try {
                        return ((string)(this[this.table_Table.myimtypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.myimtypeColumn] = value;
                }
            }
            
            public string 姓名 {
                get {
                    try {
                        return ((string)(this[this.table_Table.姓名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.姓名Column] = value;
                }
            }
            
            public string 性别 {
                get {
                    try {
                        return ((string)(this[this.table_Table.性别Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.性别Column] = value;
                }
            }
            
            public string 出生年月 {
                get {
                    try {
                        return ((string)(this[this.table_Table.出生年月Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.出生年月Column] = value;
                }
            }
            
            public string 籍贯 {
                get {
                    try {
                        return ((string)(this[this.table_Table.籍贯Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.籍贯Column] = value;
                }
            }
            
            public string 种族 {
                get {
                    try {
                        return ((string)(this[this.table_Table.种族Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.种族Column] = value;
                }
            }
            
            public string 政治面貌 {
                get {
                    try {
                        return ((string)(this[this.table_Table.政治面貌Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.政治面貌Column] = value;
                }
            }
            
            public string 学历 {
                get {
                    try {
                        return ((string)(this[this.table_Table.学历Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.学历Column] = value;
                }
            }
            
            public string 职务 {
                get {
                    try {
                        return ((string)(this[this.table_Table.职务Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.职务Column] = value;
                }
            }
            
            public string 电话 {
                get {
                    try {
                        return ((string)(this[this.table_Table.电话Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.电话Column] = value;
                }
            }
            
            public string 邮箱 {
                get {
                    try {
                        return ((string)(this[this.table_Table.邮箱Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.邮箱Column] = value;
                }
            }
            
            public string 家庭地址 {
                get {
                    try {
                        return ((string)(this[this.table_Table.家庭地址Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.table_Table.家庭地址Column] = value;
                }
            }
            
            public bool IsmyimnameNull() {
                return this.IsNull(this.table_Table.myimnameColumn);
            }
            
            public void SetmyimnameNull() {
                this[this.table_Table.myimnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsmyimdataNull() {
                return this.IsNull(this.table_Table.myimdataColumn);
            }
            
            public void SetmyimdataNull() {
                this[this.table_Table.myimdataColumn] = System.Convert.DBNull;
            }
            
            public bool IsmyimtypeNull() {
                return this.IsNull(this.table_Table.myimtypeColumn);
            }
            
            public void SetmyimtypeNull() {
                this[this.table_Table.myimtypeColumn] = System.Convert.DBNull;
            }
            
            public bool Is姓名Null() {
                return this.IsNull(this.table_Table.姓名Column);
            }
            
            public void Set姓名Null() {
                this[this.table_Table.姓名Column] = System.Convert.DBNull;
            }
            
            public bool Is性别Null() {
                return this.IsNull(this.table_Table.性别Column);
            }
            
            public void Set性别Null() {
                this[this.table_Table.性别Column] = System.Convert.DBNull;
            }
            
            public bool Is出生年月Null() {
                return this.IsNull(this.table_Table.出生年月Column);
            }
            
            public void Set出生年月Null() {
                this[this.table_Table.出生年月Column] = System.Convert.DBNull;
            }
            
            public bool Is籍贯Null() {
                return this.IsNull(this.table_Table.籍贯Column);
            }
            
            public void Set籍贯Null() {
                this[this.table_Table.籍贯Column] = System.Convert.DBNull;
            }
            
            public bool Is种族Null() {
                return this.IsNull(this.table_Table.种族Column);
            }
            
            public void Set种族Null() {
                this[this.table_Table.种族Column] = System.Convert.DBNull;
            }
            
            public bool Is政治面貌Null() {
                return this.IsNull(this.table_Table.政治面貌Column);
            }
            
            public void Set政治面貌Null() {
                this[this.table_Table.政治面貌Column] = System.Convert.DBNull;
            }
            
            public bool Is学历Null() {
                return this.IsNull(this.table_Table.学历Column);
            }
            
            public void Set学历Null() {
                this[this.table_Table.学历Column] = System.Convert.DBNull;
            }
            
            public bool Is职务Null() {
                return this.IsNull(this.table_Table.职务Column);
            }
            
            public void Set职务Null() {
                this[this.table_Table.职务Column] = System.Convert.DBNull;
            }
            
            public bool Is电话Null() {
                return this.IsNull(this.table_Table.电话Column);
            }
            
            public void Set电话Null() {
                this[this.table_Table.电话Column] = System.Convert.DBNull;
            }
            
            public bool Is邮箱Null() {
                return this.IsNull(this.table_Table.邮箱Column);
            }
            
            public void Set邮箱Null() {
                this[this.table_Table.邮箱Column] = System.Convert.DBNull;
            }
            
            public bool Is家庭地址Null() {
                return this.IsNull(this.table_Table.家庭地址Column);
            }
            
            public void Set家庭地址Null() {
                this[this.table_Table.家庭地址Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRowChangeEvent : EventArgs {
            
            private _TableRow eventRow;
            
            private DataRowAction eventAction;
            
            public _TableRowChangeEvent(_TableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
